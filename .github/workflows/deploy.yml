name: Deploy to Google Cloud Run

on:
    push:
        branches:
            - hackathon # Deploys when pushing to the main branch

jobs:
    deploy:
        name: Build, Push, and Deploy to Cloud Run
        runs-on: ubuntu-latest

        steps:
            # 1. Check out the repository
            - name: Checkout repository
              uses: actions/checkout@v4

            # 2. Authenticate to Google Cloud
            - name: Authenticate to Google Cloud
              id: auth
              uses: google-github-actions/auth@v2
              with:
                  credentials_json: ${{ secrets.GCP_SA_KEY }}

            # 3. Set up the Google Cloud SDK (gcloud)
            - name: Set up Cloud SDK
              uses: google-github-actions/setup-gcloud@v2
              with:
                  project_id: ${{ secrets.GCP_PROJECT_ID }}

            # 4. Configure Docker to push to Google Artifact Registry
            - name: Authorize Docker push
              run: gcloud auth configure-docker "europe-west1-docker.pkg.dev" --quiet

            # 5. Build the Docker image, passing in build-time variables
            - name: Build Docker image
              run: |
                  docker build \
                    --build-arg NEXT_PUBLIC_FIREBASE_API_KEY="${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" \
                    --build-arg NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN="${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" \
                    --build-arg NEXT_PUBLIC_FIREBASE_PROJECT_ID="${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" \
                    --build-arg NEXT_PUBLIC_GEMINI_API_KEY="${{ secrets.NEXT_PUBLIC_GEMINI_API_KEY }}" \
                    -t "europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/flowshare-repo/flowshare-app:${{ github.sha }}" .

            # 6. Push the Docker image to Artifact Registry
            - name: Push Docker image
              run: docker push "europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/flowshare-repo/flowshare-app:${{ github.sha }}"

            # 7. Deploy the container image to Cloud Run
            - name: Deploy to Cloud Run
              uses: google-github-actions/deploy-cloudrun@v2
              with:
                  service: flowshare
                  region: "europe-west1"
                  service-account: firebase-adminsdk-fbsvc@back-allocation.iam.gserviceaccount.com
                  image: "europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/flowshare-repo/flowshare-app:${{ github.sha }}"
                  flags: |
                      --memory=1Gi
                      --cpu=1
                      --timeout=300
                      --min-instances=0
                      --max-instances=20
                      --concurrency=80
                      --allow-unauthenticated
                      --set-env-vars GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }},NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }},NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }},NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }},FIREBASE_PRIVATE_KEY_ID=${{ secrets.FIREBASE_PRIVATE_KEY_ID }},FIREBASE_CLIENT_ID=${{ secrets.FIREBASE_CLIENT_ID }},FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }},FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }},FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }},NEXT_PUBLIC_GEMINI_API_KEY=${{ secrets.NEXT_PUBLIC_GEMINI_API_KEY }}

            # 8. Output the URL of the deployed service
            - name: Show Deployed URL
              run: echo "Service deployed to ${{ steps.deploy.outputs.url }}"
